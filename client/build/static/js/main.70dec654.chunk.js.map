{"version":3,"sources":["services/auth.service.js","components/Jumbotron.js","components/shared/helpers.js","components/Login.js","components/SignUp.js","components/Type.js","components/Category.js","components/Box.js","components/Summary.js","components/Loading.js","services/auth-header.js","services/user.service.js","components/UnsavedChangesAlert.js","components/shared/newUserSeed.js","components/Budget.js","components/Home.js","components/Dashboard.js","components/Navbar.js","components/Footer.js","App.js","serviceWorker.js","index.js"],"names":["API_URL","username","password","axios","post","then","response","data","accessToken","localStorage","setItem","JSON","stringify","removeItem","email","parse","getItem","Jumbotron","className","this","props","largeTitle","smallTitle","subtitle","children","Component","successfulSignUpAlert","a","Swal","fire","icon","title","html","showConfirmButton","timer","successfulSaveAlert","errorAlert","error","resMessage","message","toString","text","footer","verifySignUp","status","alert","length","isEmail","verifyLogin","LogIn","handleLogIn","bind","handleChange","state","loading","evt","setState","target","name","value","e","preventDefault","AuthService","login","history","push","window","location","reload","console","log","htmlFor","type","onChange","placeholder","disabled","onClick","SignUp","handleSignUp","result","signup","Type","handleOnBlur","cleanValue","Number","toFixed","categoryTitle","key","description","id","onBlur","Category","handleUpdate","categoryTitleClasses","boxType","dataId","split","join","dataTarget","data-toggle","data-target","aria-expanded","aria-controls","toUpperCase","parseFloat","subtotal","aria-labelledby","data-parent","types","map","field","typeKey","Box","updateBox","num","category","cardHeaderClasses","cardFooterClasses","boxData","categories","categoryKey","handleSaveNew","total","Summary","monthlyTotal","totalIncome","totalExpenses","Loading","role","authHeader","user","get","headers","income","expense","put","UnsavedChangesAlert","handleLeavePage","unsavedChanges","returnValue","addEventListener","removeEventListener","when","uuidv4","require","v4","incomeData","categoryId","income_type_id","expenseData","expense_type_id","Budget","incomeTotal","expenseTotal","currentUser","getCurrentUser","unregisteredUser","newUser","isLoaded","undefined","updateValue","updateCategorySubtotal","updateFullTotal","updateIncomeHelper","updateExpensesHelper","handleSave","hideAlert","incOrExp","newState","find","elem","categoryToUpdate","newSubtotal","reduce","accumulator","currentValue","totalToUpdate","newTotal","toggleSignUp","saveNewUserBudget","confirmBtnStyle","padding","borderRadius","backgroundColor","color","width","cancelBtnStyle","onConfirm","onCancel","showCancel","Promise","all","UserService","saveIncomeNew","saveExpenseNew","res","catch","saveIncome","saveExpense","saveExistingUserBudget","getUserIncome","getUserExpense","values","jsonParsedIncomeObject","jsonStringResponse","jsonParsedExpenseObject","Home","to","exact","path","component","Login","Dashboard","content","Navbar","href","logOut","Footer","App","logout","Boolean","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.70dec654.chunk.js","sourcesContent":["import axios from \"axios\";\n\nconst API_URL = \"http://localhost:3001/api/auth/\";\n\nclass AuthService {\n  login(username, password) {\n    return axios\n      .post(API_URL + \"signin\", {\n        username,\n        password\n      })\n      .then(response => {\n        if (response.data.accessToken) {\n          localStorage.setItem(\"user\", JSON.stringify(response.data));\n        }\n\n        return response.data;\n      });\n  }\n\n  logout() {\n    localStorage.removeItem(\"user\");\n  }\n\n  signup(username, email, password) {\n    return axios.post(API_URL + \"signup\", {\n      username,\n      email,\n      password\n    });\n  }\n\n  getCurrentUser() {\n    return JSON.parse(localStorage.getItem('user'));\n  }\n}\n\nexport default new AuthService();","// ******************************************************************************************************\n// Jumbotron.js - Reusable component that keeps Jumbotron styles consistent accross site with \"branding.\"\n// ******************************************************************************************************\n\n// Dependencies\nimport React, { Component } from 'react';\n\nclass Jumbotron extends Component {\n  render() {\n    return(\n      <div className=\"jumbotron jumbo\">\n        <div className=\"row\">\n          <div className=\"col-sm-12 logo\">\n            <span className=\"welcome-to\">{this.props.largeTitle} </span>{this.props.smallTitle}\n          </div>\n        </div>\n        <div className=\"row\">\n          <div className=\"col-sm-12 welcome-subtitle\">\n            <div className=\"subtitle\">\n              {this.props.subtitle}\n            </div>\n          </div>\n        </div>\n        \n        {this.props.children}\n\n      </div>\n    )\n  }\n}\n\nexport default Jumbotron;\n","// *********************************************************************************\n// helpers.js - This file is used for reusable methods, imported by other src files.\n// *********************************************************************************\n\n// Packages\nimport { isEmail } from \"validator\";\nimport Swal from 'sweetalert2'; // Using this SweetAlert package as well because it's easier to use in functions, requires less state management\n\n\n\n// ====================================\n// REUSABLE MODALS ====================\n// ====================================\n\n// Displays a modal notifying user they have signed up successfully\nexport const successfulSignUpAlert = async () => {\n  await Swal.fire({\n    icon: 'success',\n    title: 'Success!',\n    html: 'You are now registered!<br><br>Redirecting you to your dashboard...',\n    showConfirmButton: false,\n    timer: 1500\n  });\n}\n\n// Displays a modal notifying user they have saved their info successfully\nexport const successfulSaveAlert = () => {\n  Swal.fire({\n    icon: 'success',\n    title: 'Success!',\n    html: 'Your information has been saved!',\n  });\n}\n\n// Displays a general error modal, used to display API call errors to user\nexport const errorAlert = (error) => {\n  const resMessage =\n    (error.response &&\n      error.response.data &&\n      error.response.data.message) ||\n    error.message ||\n    error.toString();\n\n  return Swal.fire({\n    icon: 'warning',\n    title: 'Oops!',\n    text: `${resMessage} Please try again.`, \n    footer: 'Or, if you have not yet signed up, please do so.'\n  });\n}\n\n\n// ====================================\n// USER AUTHORIZATION =================\n// ====================================\n\n\n// Validates SignUp information\n// Returns: 1) Validation success/failure, and 2) Corresponding modal alert to display\nexport const verifySignUp = (username, email, password) => {\n  let status = null;\n  let alert = null;\n\n  if (!username || !email || !password) {\n    status = false;\n    alert = Swal.fire({\n      icon: 'warning',\n      title: 'Oops!',\n      text: 'Please fill out all forms.',\n    });\n  } else if (username.length < 3 || username.length > 20) {\n    status = false;\n    alert = Swal.fire({\n      icon: 'warning',\n      title: 'Oops!',\n      text: 'Username must be between 3 and 20 characters long.',\n    });\n  } else if (isEmail(email) === false) {\n    status = false;\n    alert = Swal.fire({\n      icon: 'warning',\n      title: 'Oops!',\n      text: 'Please enter a valid email address.',\n    });\n  } else if (password.length < 6 || password.length > 40) {\n    status = false;\n    alert = Swal.fire({\n      icon: 'warning',\n      title: 'Oops!',\n      text: 'Password must be between 6 and 40 characters long.',\n    });\n  } else {\n    status = true;\n    alert =  successfulSignUpAlert();\n  }\n  return [alert, status]\n};\n\n\n// Validates LogIn information\n// Returns: 1) Validation success/failure, and 2) Corresponding modal alert to display\nexport const verifyLogin = (username, password) => {\n  let status = null; // Boolean, true if user input is valid, false if not\n  let alert = null; // Holds the modal that will display to user\n\n  if (!username || !password) {\n    status = false;\n    alert = Swal.fire({\n      icon: 'warning',\n      title: 'Oops!',\n      text: 'Please enter a username and password.',\n    });\n  } else {\n    status = true;\n    alert = Swal.fire({\n      icon: 'success',\n      title: 'Success!',\n      html: 'You are now logged in!<br><br>Redirecting you to your dashboard...',\n      showConfirmButton: false,\n      timer: 1500\n    });\n  }\n  return [alert, status]\n};\n","// *************************************************************************************************************\n// Login.js - Component with forms for user to login.  Validates user input, makes API call to log user in.\n// *************************************************************************************************************\n\n// Dependencies\nimport React, { Component } from \"react\";\nimport AuthService from \"../services/auth.service\";\n\n// Project Components\nimport Jumbotron from \"./Jumbotron\";\nimport { verifyLogin, errorAlert } from \"./shared/helpers\";\n\nexport default class LogIn extends Component {\n  constructor(props) {\n    super(props);\n    this.handleLogIn = this.handleLogIn.bind(this);\n    this.handleChange = this.handleChange.bind(this);\n\n    this.state = {\n      username: \"\",\n      password: \"\",\n      loading: false,\n      message: \"\"\n    };\n  }\n\n  handleChange(evt) {\n    this.setState({[evt.target.name]: evt.target.value});\n  }\n\n  async handleLogIn(e) {\n    e.preventDefault();\n    this.setState({ loading: true });\n\n    let [alert, result] = verifyLogin(this.state.username, this.state.password);\n\n    if (result === false) {\n      await alert;\n      this.setState({ loading: false });\n    } else {\n\n      try {\n        await AuthService.login(this.state.username, this.state.password)\n        await alert;\n        this.props.history.push(\"/dashboard\");\n        window.location.reload();\n      } catch (error) {\n        console.log(error);\n        errorAlert(error);\n        this.setState({ loading: false });\n      }\n\n    }\n  }\n\n  render() {\n    return (\n\n      <Jumbotron\n        largeTitle=\"Log In \"\n        smallTitle=\"Quick Budget\"\n        subtitle=\"If you already have an account, enter your information below.\"\n      >\n\n        <form>\n          <div className=\"form-group\">\n\n            <div className=\"row\">\n              <div className=\"col-sm-12\">\n                <div className=\"card login-label\">\n\n                  <label htmlFor=\"username\">Username</label>\n                  <input \n                    type=\"text\" \n                    name=\"username\"\n                    value={this.state.username}\n                    onChange={this.handleChange} \n                    className=\"form-control login-form\" \n                    placeholder=\"Enter Username Here\" \n                  />\n\n                </div>\n              </div>\n            </div>\n\n            <div className=\"row\">\n              <div className=\"col-sm-12\">\n                <div className=\"card login-label\">\n                  <label htmlFor=\"password\">Password</label>\n                  <input \n                    type=\"password\" \n                    name=\"password\"\n                    value={this.state.password}\n                    onChange={this.handleChange} \n                    className=\"form-control login-form\" \n                    placeholder=\"Enter Password Here\"\n                  />\n                </div>\n              </div>\n            </div>\n\n            <div className=\"row\">\n              <div className=\"col-sm-12\">\n                <button\n                  className=\"btn btn-signup\"\n                  disabled={this.state.loading}\n                  onClick={this.handleLogIn}\n                  >\n                  {this.state.loading && (\n                    <span className=\"spinner-border spinner-border-sm\"></span>\n                    )}\n                  <span>Log In</span>\n                </button>\n              </div>\n            </div>\n\n          </div>\n        </form>\n\n      </Jumbotron>\n\n    );\n  }\n}\n","// ***************************************************************************************************************************\n// SignUp.js - Component with forms for user to register.  Validates user input, makes API call to create user and log them in.\n// ***************************************************************************************************************************\n\n// Dependencies\nimport React, { Component } from \"react\";\n\n// Project Components\nimport Jumbotron from \"./Jumbotron\";\nimport { verifySignUp, errorAlert, successfulSignUpAlert } from \"./shared/helpers\";\nimport AuthService from \"../services/auth.service\";\n\n\nexport default class SignUp extends Component {\n  constructor(props) {\n    super(props);\n    this.handleSignUp = this.handleSignUp.bind(this);\n    this.handleChange = this.handleChange.bind(this);\n\n    this.state = {\n      username: \"\",\n      email: \"\",\n      password: \"\",\n      loading: false\n    };\n  }\n\n  handleChange(evt) {\n    this.setState({[evt.target.name]: evt.target.value});\n  }\n\n  // TODO: There's too much logic here.  Should abstract this away from the component. (CB 9/25)\n  async handleSignUp(e) {\n    e.preventDefault();\n\n    let [alert, result] = verifySignUp(this.state.username, this.state.email, this.state.password);\n    this.setState({ loading: true });\n    \n    if (result === false) {\n      await alert;\n    } else {\n      try {\n        await AuthService.signup(this.state.username, this.state.email, this.state.password)\n        await successfulSignUpAlert();\n\n        try {\n          await AuthService.login(this.state.username, this.state.password);\n          this.props.history.push(\"/dashboard\");\n          window.location.reload();\n        } catch (error) {\n          // TODO (CB 10/5) - MDN docs imply nested catch statements are unnecessary.  Ask someone if that's OK (CB 10/3)\n          console.log(error);\n          errorAlert(error);\n          this.setState({ loading: false });\n        }\n\n      } catch (error) {\n        console.log(error);\n        errorAlert(error);\n        this.setState({ loading: false });\n      }\n    }\n  }\n  \n\n  render() {\n    return (\n\n      <Jumbotron\n        largeTitle=\"Sign Up \"\n        smallTitle=\"Quick Budget\"\n        subtitle=\"To create an account, please fill out the fields below.\"\n      >\n\n        <form>\n          <div className=\"form-group\">\n\n            <div className=\"row\">\n              <div className=\"col-sm-12\">\n                <div className=\"card login-label\">\n                  <label htmlFor=\"username\">Username</label>\n                  <input \n                    type=\"text\" \n                    name=\"username\"\n                    value={this.state.username}\n                    onChange={this.handleChange} \n                    className=\"form-control login-form\" \n                    placeholder=\"Enter Username Here\" \n                  />\n                </div>\n              </div>\n            </div>\n\n            <div className=\"row\">\n              <div className=\"col-sm-12\">\n                <div className=\"card login-label\">\n                  <label htmlFor=\"email\">Email</label>\n                  <input \n                    type=\"text\" \n                    name=\"email\"\n                    value={this.state.email}\n                    onChange={this.handleChange} \n                    className=\"form-control login-form\" \n                    placeholder=\"youremail@gmail.com\" \n                  />\n                </div>\n              </div>\n            </div>\n\n            <div className=\"row\">\n              <div className=\"col-sm-12\">\n                <div className=\"card login-label\">\n                  <label htmlFor=\"password\">Password</label>\n                  <input \n                    type=\"password\" \n                    name=\"password\"\n                    value={this.state.password}\n                    onChange={this.handleChange} \n                    className=\"form-control login-form\" \n                    placeholder=\"Enter Password Here\"\n                  />\n                </div>\n              </div>\n            </div>\n\n            <div className=\"row\">\n              <div className=\"col-sm-12\">\n                <button\n                  className=\"btn btn-signup\"\n                  disabled={this.state.loading}\n                  onClick={this.handleSignUp}\n                  >\n                  {this.state.loading && (\n                    <span className=\"spinner-border spinner-border-sm\"></span>\n                    )}\n                  <span>Sign Up</span>\n                </button>\n              </div>\n            </div>\n          \n          </div>\n        </form>\n\n      </Jumbotron>\n\n\n\n    );\n  }\n}","// ***************************************************************************\n// Type.js - Displays the Types' titles and values.  Category is parent.\n// ***************************************************************************\n\n// Dependencies\nimport React, { Component } from 'react';\n\n\nclass Type extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      // TODO (CB 10/5): Is it OK to have value here in state, as well as in Budget component in state?  It works well this way so that\n      // ... we can use onBlur to clean the values, and so that not every single keystroke triggers re-renders (only exiting form)\n      value: this.props.value,\n    }\n    this.handleChange = this.handleChange.bind(this);\n    this.handleOnBlur = this.handleOnBlur.bind(this);\n  }\n\n  // Passes the Type's value up the chain of components, ultimately to Budget where the subtotals and total are also updated\n  handleChange(evt) {    \n    this.setState({value: evt.target.value});\n  }\n\n  // When a user clicks out of the Value form they were editing, this cleans their value to look \"financial\"\n  // ... by removing 0's to the left, and rounding to 2 decimal places. Then, it triggers handleChange, passing values to Budget\n  handleOnBlur() {\n    let cleanValue = this.state.value;\n    if (cleanValue === \"\") cleanValue = 0;\n    cleanValue = Number(this.state.value).toFixed(2);\n\n    this.setState({ value: cleanValue });\n    this.props.handleChange(this.props.title, cleanValue, this.props.categoryTitle)\n  }\n\n  // TODO (CB 10/5): This is specifically handling the very first time the values are loaded in for new users who have not yet saved\n  // ... It was turning the \"0.00\" from the newUserSeed file to \"0\", so this fixes it but isn't good for efficiency. \n  componentDidMount() {\n    if (this.state.value === 0) {\n      let cleanValue = Number(this.state.value).toFixed(2);\n      this.setState({ value: cleanValue });\n    }\n  }\n\n\n  render() {\n    return(\n\n      <form key={this.key}>\n        <hr />\n        <div className=\"form-group row\">\n\n          {/* Type's title, in upper case */}\n          <div className=\"col-sm-9\">\n            <label htmlFor={this.props.title} className=\"col-form-label label-title\">\n              {this.props.title}\n            </label>\n            {/* Underneath the title, a description */}\n            <div className=\"label-description\">\n              {this.props.description}\n            </div>\n          </div>\n\n          {/* On the right side, the input for users to put $ amounts */}\n          <div className=\"col-sm-3\">\n            <div className=\"input-group mb-3\">\n              <div className=\"input-group-prepend\">\n                <div className=\"input-group-text\" id=\"inputGroup-sizing-sm\">$</div>\n              </div>\n              \n              \n              {/* Value goes here. (TODO (CB 10/5) - should Value be abstracted to a separate component for clarity?) */}\n              <input\n                type=\"number\" \n                name={this.props.title}\n                id={this.props.title}\n                onChange={this.handleChange}\n                className=\"form-control\"\n                value={this.state.value}\n                onBlur={this.handleOnBlur}\n              />\n\n            </div>\n          </div>\n\n        </div>\n      </form>\n\n    )\n  }\n}\n\nexport default Type;\n","// *************************************************************************************************\n// Category.js - Displays the Categories' titles and subtotals.  Box is parent, Type are children.\n// *************************************************************************************************\n\n// Dependencies\nimport React, { Component } from 'react';\n\n// Project Components\nimport Type from './Type';\n// import NewField from './NewField';  - will be added back in later, once the app is ready to have users add their own Types\n\n\nclass Category extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      // addingNewField: false, - will be added back in later, once the app is ready to have users add their own Types\n    }\n    this.handleChange       = this.handleChange.bind(this);\n    // this.toggleAddNewField  = this.toggleAddNewField.bind(this); - will be added back in later, once the app is ready to have users add their own Types\n    // this.handleSaveNew      = this.handleSaveNew.bind(this); - will be added back in later, once the app is ready to have users add their own Types\n  }\n\n  // Middleman function passing values between Type's value and Budget\n  handleChange(name, value, categoryTitle) {\n    this.props.handleUpdate(name, value, categoryTitle);\n  }\n\n  // Will be added back in later, once the app is ready to have users add their own Types\n  // toggleAddNewField() {\n  //   this.state.addingNewField === true ? this.setState({addingNewField: false}) : this.setState({addingNewField: true});\n  // }\n\n  // Will be added back in later, once the app is ready to have users add their own Types\n  // handleSaveNew(obj) {\n  //   this.props.handleSaveNew(obj, this.props.categoryTitle);\n  // }\n\n\n  render() {\n  \n    // Determines if this is income/expense, for corresponding css styling\n    const categoryTitleClasses = `row category-title-${this.props.boxType}` \n\n    // Bootstrap's accordion collapse uses these values\n    const dataId = this.props.categoryTitle.split(\" \").join(\"-\")\n    const dataTarget = `#${dataId}`;\n\n    return (\n      <div id=\"accordion\">\n        <li className=\"list-group-item\">\n\n          {/* Category's title, in upper case */}\n          <div className={categoryTitleClasses}>\n            \n            <div className=\"col-sm-9\">\n              <label htmlFor={this.props.categoryTitle} className=\"col-form-label label-title\">\n                <button className=\"btn btn-link-category\" data-toggle=\"collapse\" data-target={dataTarget} aria-expanded=\"true\" aria-controls=\"collapseOne\">\n                  {this.props.categoryTitle.toUpperCase()}\n                </button>\n              </label>\n            </div>\n            \n            {/* Displays subtotal for this category */}\n            <div className=\"col-sm-3\">\n              <div className=\"subtotal\">\n                ${parseFloat(this.props.subtotal).toFixed(2)}\n              </div>\n            </div>\n\n          </div>\n        \n          {/* Under each Category, we now map through all Types and their Values */}\n          <div id={dataId} className=\"collapse show\" aria-labelledby=\"headingOne\" data-parent=\"#accordion\">\n            {this.props.types.map(field =>\n              <Type \n                key={field.typeKey}\n                title={field.title}\n                description={field.description}\n                value={field.value}\n                handleChange={this.handleChange}\n                categoryTitle={this.props.categoryTitle}\n              />\n            )}\n\n            {/* Will be added back in later, once the app is ready to have users add their own Types */}\n            {/* <div>\n              <NewField \n                addingNewField={this.state.addingNewField}\n                toggleAddNewField={this.toggleAddNewField}\n                sendNewFieldInfo={this.handleSaveNew}\n              />\n            </div> */}\n          </div>\n\n        </li>\n      </div>\n    )\n  }\n}\n\nexport default Category;","// *************************************************************************************************************\n// Box.js - Container component, one for income and one for expenses. Budget is parent, Category are children.\n// *************************************************************************************************************\n\n// Dependencies\nimport React, { Component } from 'react';\n\n// Project Components\nimport Category from './Category';\n\n\nclass Box extends Component {\n  constructor(props) {\n    super(props);\n    this.updateBox = this.updateBox.bind(this);\n    // this.handleSaveNew = this.handleSaveNew.bind(this);  - Will be added back in later, once the app is ready to have users add their own Types\n  }\n\n  // Middleman function passing values between Type's value and Budget\n  updateBox(name, num, category) {\n    this.props.handleUpdate(name, num, category);\n  }\n\n  // Will be added back in later, once the app is ready to have users add their own Types\n  // handleSaveNew(obj, category) {\n  //   this.props.handleSaveNew(obj, category);\n  // }\n\n\n  render() {\n    \n    // These are used for defining the class dynamically, used to style in the css file.\n    const boxType = this.props.boxType; \n    const cardHeaderClasses = `card-header card-header-${boxType}`\n    const cardFooterClasses = `card-footer card-footer-${boxType}`\n\n    return(\n      <div>\n        <div className=\"card w-75\">\n\n          {/* Header displays title \"Income\" or \"Expenses\" */}\n          <div className={cardHeaderClasses}>\n            <div className=\"btn-link-heading\">\n              {this.props.title}\n            </div>\n          </div>\n\n          {/* Maps through each Category within income/expenses */}\n            <ul className=\"list-group list-group-flush\">\n              {this.props.boxData.categories.map(category =>\n                <Category \n                  boxType={boxType}\n                  categoryTitle={category.title}\n                  subtotal={category.subtotal}\n                  types={category.types}\n                  handleUpdate={this.updateBox}\n                  key={category.categoryKey}\n                  id={category.id}\n                  handleSaveNew={this.handleSaveNew}\n                />\n              )}\n            </ul>\n\n\n          {/* Footer displays at the bottom of Box, showing the total income/expenses */}\n          <div className={cardFooterClasses}>\n            Total Monthly {this.props.title}: ${parseFloat(this.props.total).toFixed(2)}\n          </div>\n\n        </div>\n      </div>\n    )\n  }\n}\n\nexport default Box;\n","// ************************************************************************\n// Summary.js - Component displaying the user's overall monthly total. \n// ************************************************************************\n\n// Dependencies\nimport React, { Component } from 'react';\n\nclass Summary extends Component {\n  render() {\n    // Caculates the overall monthly total\n    let monthlyTotal = this.props.totalIncome - this.props.totalExpenses\n    return(\n      <div className=\"card w-75\">\n        <div className=\"card-header card-header-summary\">\n          Overall Monthly Total: \n        </div>\n        <div className=\"card-body card-body-summary\">\n          <h3>${monthlyTotal.toFixed(2)}</h3> \n        </div>\n      </div>\n    )\n  }\n}\n\nexport default Summary;\n","// ******************************************************************************************************\n// Loading.js - Reusable component for displaying loading spinner while a page is retrieving data\n// ******************************************************************************************************\n\n// Dependencies\nimport React, { Component } from 'react';\n\nclass Loading extends Component {\n  render() {\n    return(\n      <div className=\"spinner-border text-dark loading\" role=\"status\">\n        <span className=\"sr-only\">Loading...</span>\n      </div>\n    )\n  }\n}\n\nexport default Loading;\n","export default function authHeader() {\n  const user = JSON.parse(localStorage.getItem('user'));\n\n  if (user && user.accessToken) {\n    // for Node.js Express back-end\n    return { 'x-access-token': user.accessToken };\n  } else {\n    return {};\n  }\n}","import axios from 'axios';\nimport authHeader from './auth-header';\n\nconst API_URL = 'http://localhost:3001/api/';\n\nclass UserService {\n\n  getUserIncome() {\n    return axios\n      .get(API_URL + 'user/income', { headers: authHeader() });\n  }\n\n  getUserExpense() {\n    return axios\n      .get(API_URL + 'user/expense', { headers: authHeader() });\n  }\n\n  saveIncomeNew(income) {\n    return axios\n      .post(API_URL + 'user/save/income/new', {income}, { headers: authHeader() });\n  }\n\n  saveExpenseNew(expense) {\n    return axios\n      .post(API_URL + 'user/save/expense/new', {expense}, { headers: authHeader() });\n  }\n\n  saveIncome(income) {\n    return axios\n      .put(API_URL + 'user/save/income', {income}, { headers: authHeader() });\n  }\n\n  saveExpense(expense) {\n    return axios\n      .put(API_URL + 'user/save/expense', {expense}, { headers: authHeader() });\n  }\n\n}\n\nexport default new UserService();","import React, { Component } from 'react';\nimport { Prompt } from 'react-router-dom';\n\n// The goal of this component is to create a reusable way to plug a component into any other component\n// ...that will notify the user if they navigate away without saving changes.\n\n\n// There are two possible ways a user may leave the page without saving:\n  // 1) The user's browser exits/refreshes the page.\n  // 2) The user navigates elsewhere within the App using react-browser-router\n\nclass UnsavedChangesAlert extends Component {\n\n  // Handling Case 1:\n  // These methods handle the browser - if the user exits or closes the window/tab,\n  // ... an alert will appear.  The text is automatically decided by the browser.\n  componentDidMount() {\n    window.addEventListener('beforeunload', this.handleLeavePage);\n  }\n\n  componentWillUnmount() {\n    window.removeEventListener('beforeunload', this.handleLeavePage);\n  }\n\n  // Note that the conditional means that the alert is only displayed if the user has in fact made changes\n  handleLeavePage = e => {\n    if (this.props.unsavedChanges === true) {\n      e.returnValue = '';\n    } \n  }\n\n\n  render() {\n    return(\n      // Handling Case 2:\n      // This uses react-router-dom's Prompt to notify the user\n      <Prompt \n        when={this.props.unsavedChanges}\n        message=\"There are unsaved changes, do you wish to discard them?\"\n      />\n    )\n  }\n}\n\nexport default UnsavedChangesAlert;\n","// *************************************************************************************************************\n// newUserSeed.js - Budget component uses this as default values for new/unregistered users' budgets.  \n// *************************************************************************************************************\n\n// Dependencies\nconst { v4: uuidv4 } = require('uuid'); // Used to make unique keys.\n\n\n// TODO: It would be nice to have this info feed from seed.js, so there's only one place to update when needed (CB 9/28)\nexport const incomeData = {\n  categories: [\n    {\n      categoryId: 1,\n      subtotal: 0,\n      title: 'Net Monthly Pay',\n      categoryKey: uuidv4(),\n      types: [\n        {title: 'Your Net Monthly Pay', description: 'Also known as \"take-home pay,\" this is the final amount on your paycheck - your wages, minus federal taxes, state taxes, Social Security, health insurance, etc.', value: 0.00, income_type_id: 1, typeKey: uuidv4()},\n        {title: 'Spouse\\'s Net Monthly Pay', description: 'Same as above, but for your partner (if applicable)', value: 0.00, income_type_id: 2, typeKey: uuidv4()}\n      ]\n    },\n    {\n      categoryId: 2,\n      subtotal: 0,\n      title: 'Other Monthly Income',\n      categoryKey: uuidv4(),\n      types: [\n        {title: 'Other Monthly Income', description: 'Enter additional sources of income here, such as Social Security, child support, alimony, investments, pensions, etc.', value: 0.00, income_type_id: 3, typeKey: uuidv4()}, \n      ]\n    },\n  ]\n};\n\n// TODO: It would be nice to have this info feed from seed.js, so there's only one place to update when needed (CB 9/28)\nexport const expenseData = {\n  categories: [\n    {\n      categoryId: 1,\n      subtotal: 0,      \n      title: 'Housing and Utilities',\n      categoryKey: uuidv4(),\n      types: [\n        {title: 'Rent or Mortgage', description: 'Monthly amount due.  Add in Home or Renters Insurance if not already included', value: 0.00, expense_type_id: 1, typeKey: uuidv4()}, \n        {title: 'Property Tax', description: 'If not already included in mortgage payment', value: 0.00, expense_type_id: 2, typeKey: uuidv4()},\n        {title: 'Homeowner Association (HOA) Fees', description: 'Only enter if applicable', value: 0.00, expense_type_id: 3, typeKey: uuidv4()},\n        {title: 'Home Repair and Maintenance', description: 'Even if it\\'s not a monthly expense, add what you estimate this costs per month', value: 0.00, expense_type_id: 4, typeKey: uuidv4()},\n        {title: 'Utilities', description: 'Include electricity, gas, water, sewer, trash, etc.', value: 0.00, expense_type_id: 5, typeKey: uuidv4()},\n        {title: 'Electronics', description: 'Include cable, internet, cell phone, etc.', value: 0.00, expense_type_id: 6, typeKey: uuidv4()},\n      ]\n    },\n    {\n      categoryId: 2,\n      subtotal: 0,\n      title: 'Transportation',\n      categoryKey: uuidv4(),\n      types: [\n        {title: 'Car Payment', description: 'Include any additional car payments, if you have more than one', value: 0.00, expense_type_id: 7, typeKey: uuidv4()}, \n        {title: 'Car Insurance', description: 'Check your billing, and be sure to divide this into a monthly amount', value: 0.00, expense_type_id: 8, typeKey: uuidv4()},\n        {title: 'Gas', description: 'Average monthly cost of gas', value: 0.00, expense_type_id: 9, typeKey: uuidv4()},\n        {title: 'Car Maintenance', description: 'Average monthly cost of car repairs - you can assume oil changes, with a little extra just in case of additional repairs', value: 0.00, expense_type_id: 10, typeKey: uuidv4()},\n        {title: 'Parking and Tolls', description: 'If applicable', value: 0.00, expense_type_id: 11, typeKey: uuidv4()},\n      ]\n    },\n    {\n      categoryId: 3,\n      subtotal: 0,\n      title: 'Grocieries and Food',\n      categoryKey: uuidv4(),\n      types: [\n        {title: 'Groceries', description: 'Average the monthly cost of your groceries.  It may be helpful to tally up a few months\\' worth to get a better average', value: 0.00, expense_type_id: 12, typeKey: uuidv4()},\n        {title: 'Meals at Restaurants', description: 'Again, it may be helpful to take the average of a few months', value: 0.00, expense_type_id: 13, typeKey: uuidv4()},\n      ]\n    },\n    {\n      categoryId: 4,\n      subtotal: 0,\n      title: 'Health and Beauty',\n      categoryKey: uuidv4(),\n      types: [\n        {title: 'Insurance', description: 'Include your monthly prescription costs and any regular co-pays for doctor visits', value: 0.00, expense_type_id: 14, typeKey: uuidv4()},\n        {title: 'Prescriptions and Doctor Visits', description: 'Include your monthly prescription costs and any regular co-pays for doctor visits', value: 0.00, expense_type_id: 15, typeKey: uuidv4()},\n        {title: 'Gym Membership', description: 'Include monthly dues, if applicable', value: 0.00, expense_type_id: 16, typeKey: uuidv4()},\n        {title: 'Clothes', description: 'Average monthly amount.  Also include dry cleaning and laundry, if applicable', value: 0.00, expense_type_id: 17, typeKey: uuidv4()},\n        {title: 'General Beauty Haircut and Color', description: 'Include, haircut, color, and beauty supplies', value: 0.00, expense_type_id: 18, typeKey: uuidv4()},\n      ]\n    },\n    {\n      categoryId: 5,\n      subtotal: 0,\n      title: 'Children',\n      categoryKey: uuidv4(),\n      types: [\n        {title: 'Child Care', description: 'If not already deducted from your paycheck', value: 0.00, expense_type_id: 19, typeKey: uuidv4()},\n        {title: 'Child Support', description: 'Include monthly child support amounts, if applicable', value: 0.00, expense_type_id: 20, typeKey: uuidv4()},\n        {title: 'Tuition and Supplies', description: 'Include any additional tuition or other school suppies', value: 0.00, expense_type_id: 21, typeKey: uuidv4()},\n      ]\n    },\n    {\n      categoryId: 6,\n      subtotal: 0,\n      title: 'Debts and Loans',\n      categoryKey: uuidv4(),\n      types: [\n        {title: 'Credit Cards', description: 'Total minimum monthly payment due or if you are paying extra, enter the amount you pay monthly', value: 0.00, expense_type_id: 22, typeKey: uuidv4()},\n        {title: 'Student Loans', description: 'Total minimum monthly payment due or if you are paying extra, enter the amount you pay monthly', value: 0.00, expense_type_id: 23, typeKey: uuidv4()},\n        {title: 'Medical Debt', description: 'Total minimum monthly payment due or if you are paying extra, enter the amount you pay monthly', value: 0.00, expense_type_id: 24, typeKey: uuidv4()},\n      ]\n    },\n    {\n      categoryId: 7,\n      subtotal: 0,\n      title: 'Miscellaneous',\n      categoryKey: uuidv4(),\n      types: [\n        {title: 'Hobbies', description: 'Include the average amount you spend on your hobbies - sporting equipment, music lessons, gardening supplies, etc.', value: 0.00, expense_type_id: 25, typeKey: uuidv4()},\n        {title: 'Tobacco & Alcohol', description: 'Average monthly amounts', value: 0.00, expense_type_id: 26, typeKey: uuidv4()},\n        {title: 'Media Subscriptions', description: 'Include newspapers, magazines, and any other media subscriptions (Netflix, etc.)', value: 0.00, expense_type_id: 27, typeKey: uuidv4()},\n        {title: 'Travel and Vacation', description: 'Average amount you save toward vacations each month', value: 0.00, expense_type_id: 28, typeKey: uuidv4()},\n        {title: 'Donations', description: 'Add your regular donations, if applicable', value: 0.00, expense_type_id: 29, typeKey: uuidv4()},\n        {title: 'Pet Care', description: 'If you have pets, average your pet food, insurance, toys, etc.', value: 0.00, expense_type_id: 30, typeKey: uuidv4()},\n      ]\n    },\n  ]\n}\n","// *************************************************************************************************************\n// Budget.js - Holds logic for users interacting with their budgets. \n// - Can be used by registered users (makes API call for their corresponding budget), or as a \"demo\" for unregistered users.\n// - App is parent, Box are children.\n// *************************************************************************************************************\n\n\n// Dependencies\nimport React, { Component } from \"react\";\nimport SweetAlert from 'react-bootstrap-sweetalert';\n\n// Project Components\nimport Box from \"./Box.js\";\nimport Summary from \"./Summary.js\";\nimport Jumbotron from \"./Jumbotron\";\nimport Loading from \"./Loading\";\nimport AuthService from \"../services/auth.service\";\nimport UserService from \"../services/user.service.js\";\nimport UnsavedChangesAlert from \"./UnsavedChangesAlert.js\"; // Alerts user when navigating away from the page without saving changes\n\n// Objects containing the default income and expense data, used in the event a new user\nimport { incomeData } from \"./shared/newUserSeed\";\nimport { expenseData } from \"./shared/newUserSeed\";\n\n// Helper methods used for validating new users' sign up information\nimport { verifySignUp, errorAlert, successfulSaveAlert } from \"./shared/helpers\"\n\nclass Budget extends Component {\n\n  constructor(props) {\n    super(props);\n    this.state = {\n\n      // Budget information\n      incomeData: null,  // Object containing the user's income information.  Obtained from API call getting user's info, or from default values for new users.\n      expenseData: null, // Object containing the user's expense information.  Obtained from API call getting user's info, or from default values for new users.\n      incomeTotal: 0, // Number appearing at bottom of income section, showing user's total income.\n      expenseTotal: 0, // Number appearing at bottom of expense section, showing user's total expense.\n      total: 0, // Number showing in bottommost card, showing user's total income minus total expense.  While it could be inferred, keeping this explicitly in state makes sure it is always rendered with current info.\n      \n      // User information\n      currentUser: AuthService.getCurrentUser(), // Returns user's jwt accessToken, email, id, and username.\n      unregisteredUser: null, // Boolean determined in componenentDidMount. Used when user clicks save.  If true, prompts them to sign up in order to save.\n      newUser: null, // Boolean determined in componenentDidMount. If true, pulls default information from newUserSeed to populate budget.\n\n      // Page status information\n      error: null,\n      isLoaded: false,\n      unsavedChanges: false,\n      \n      // If true, displays modal for user to register\n      alert: false,\n\n      // Used for logging in unregistered users\n      username: undefined,\n      email: undefined,\n      password: undefined,\n    }\n    this.updateValue              = this.updateValue.bind(this);\n    this.updateCategorySubtotal   = this.updateCategorySubtotal.bind(this);\n    this.updateFullTotal          = this.updateFullTotal.bind(this);\n    this.updateIncomeHelper       = this.updateIncomeHelper.bind(this);\n    this.updateExpensesHelper     = this.updateExpensesHelper.bind(this);\n    // this.saveNewIncomeHelper    = this.saveNewIncomeHelper.bind(this); - used to add new items.  Currently disabled.\n    // this.saveNewExpensesHelper  = this.saveNewExpensesHelper.bind(this); - used to add new items.  Currently disabled.\n    // this.saveNewField           = this.saveNewField.bind(this); - used to add new items.  Currently disabled.\n    this.handleSave               = this.handleSave.bind(this);\n\n    this.handleChange             = this.handleChange.bind(this);\n    this.handleSignUp             = this.handleSignUp.bind(this);\n    this.hideAlert                = this.hideAlert.bind(this);\n\n  }\n\n  // **********************************************\n  // UPDATING VALUES & TOTALS *********************\n  // **********************************************\n\n  // Updates individual Type's values in state, then triggers updating category subtotals\n  updateValue(incOrExp, category, name, num) {\n\n    // If user navigates away from page without saving, they will be alerted\n    this.setState({ unsavedChanges: true });\n\n    // Makes new copy of state...\n    let newState = this.state[incOrExp];\n\n    // ...in that copy, finds the field that needs to be updated...\n    const categoryToUpdate = newState.categories.find(elem => elem.title === category);\n    const fieldToUpdate = categoryToUpdate.types.find(elem => elem.title === name);\n\n    // ...and sets that field's value to the updated variable \"num\".\n    fieldToUpdate.value = num;\n\n    // Sets relevant state with updated numbers, starts callback to update totals\n    this.setState({[incOrExp]: newState}, () => {\n      this.updateCategorySubtotal(incOrExp, category);\n    })\n\n  }\n\n  // Updates the category subtotal, then triggers the income/expense total to update\n  updateCategorySubtotal(incOrExp, category) {\n\n    // Makes new copy of state\n    let newState = this.state[incOrExp];\n\n    // Determines which category needs to be updated\n    const categoryToUpdate = newState.categories.find(elem => elem.title === category);\n\n    // Reduces the types' values to find the category's subtotal\n    let newSubtotal = categoryToUpdate.types.reduce(\n      (accumulator, currentValue) => parseFloat(accumulator) + parseFloat(currentValue.value)\n      , 0\n    );\n    categoryToUpdate.subtotal = newSubtotal;\n\n    // Updates state, then triggers the income/expense total to update\n    this.setState({[incOrExp]: newState}, () => {\n      this.updateFullTotal(incOrExp);\n    });\n  }\n\n  // Updates the income/expense total, then triggers the overall monthly total to update\n  updateFullTotal(incOrExp) {\n    // Based on incOrExp, determines which total to update\n    let totalToUpdate = (incOrExp === \"incomeData\" ? \"incomeTotal\" : \"expenseTotal\")\n    \n    // Makes new copy of state\n    let dataCopy = this.state[incOrExp];\n\n    // Reduces array of category subtotals to find total of values\n    let newTotal = dataCopy.categories.reduce(\n      (accumulator, currentValue) => parseFloat(accumulator) + parseFloat(currentValue.subtotal)\n      , 0\n    );\n\n    // ...and sets state with that updated value.\n    this.setState({[totalToUpdate]: newTotal});\n  }\n\n  // For changes to income types, sends relevant info to updateTotal\n  updateIncomeHelper(name, num, category) {\n    this.updateValue(\"incomeData\", category, name, num);\n  }\n\n  // For changes to expenses types, sends relevant info to updateTotal\n  updateExpensesHelper(name, num, category) {\n    this.updateValue(\"expenseData\", category, name, num);\n  }\n\n\n  // This section will be added back in later, once the app is ready to have users add their own Types\n  // **********************************************\n  // SAVING NEW types ****************************\n  // **********************************************\n  // Appends the new field object to the end of the correct part of state\n  // saveNewField(obj, type, category) {\n  //   let newState = this.state[type]\n  //   const categoryToSaveIn = newState.categories.find(elem => elem.title === category);\n\n  //   categoryToSaveIn.types = [...categoryToSaveIn.types, obj];\n  //   this.setState({[type]: newState}, () => {\n  //     this.updateCategorySubtotal(type, category);\n  //   });\n  // }\n\n  // Used to add new items.  Currently disabled.\n  // saveNewIncomeHelper(obj, category) {\n  //   this.saveNewField(obj, \"incomeData\", category);\n  // }\n\n  // Used to add new items.  Currently disabled.\n  // saveNewExpensesHelper(obj, category) {\n  //   this.saveNewField(obj, \"expensesData\", category);\n  // }\n\n\n  // ***********************************************\n  // TO REFACTOR \n    // 1) There's lots of repetition from SignUp component.\n    // 2) This should live in a separate component\n  async handleSignUp(e) {\n\n    let [alert, result] = verifySignUp(this.state.username, this.state.email, this.state.password);\n    \n    this.hideAlert();\n    \n    if (result === false) {\n      await alert;\n      await this.setState({ \n        username: undefined, \n        email: undefined, \n        password: undefined \n      });\n      this.toggleSignUp();\n    \n    } else {\n    \n      try {\n        await AuthService.signup(\n          this.state.username, \n          this.state.email, \n          this.state.password\n        );\n\n        try {\n          await alert;\n\n          await AuthService.login(this.state.username, this.state.password)\n          await this.setState({ unregisteredUser: false, unsavedChanges: false });\n          await this.saveNewUserBudget();\n\n          await this.props.history.push(\"/dashboard\");\n          window.location.reload();\n        } catch(error) {\n          // TODO - it seems nested catch statements are unnecessary.  Ask someone if that's OK (CB 10/3)\n          console.log(error);\n          errorAlert(error);\n          this.setState({ username: undefined, email: undefined, password: undefined });\n        }\n      } catch(error) {\n        // TODO - it seems nested catch statements are unnecessary.  Ask someone if that's OK (CB 10/3)\n        console.log(error);\n        errorAlert(error);\n        this.setState({ username: undefined, email: undefined, password: undefined });\n      }\n    }\n  }\n\n  handleChange(evt) {\n    this.setState({[evt.target.name]: evt.target.value});\n  }\n\n  toggleSignUp() {\n    let confirmBtnStyle = {\n      padding: \"7px 65px\",\n      borderRadius: \"20px\",\n      backgroundColor: \"rgba(13, 97, 72, 0.842)\",\n      color: \"rgb(255, 255, 255)\",\n      width: \"210px\"\n    }\n\n    let cancelBtnStyle = {\n      padding: \"7px 65px\",\n      borderRadius: \"20px\",\n      backgroundColor: \"rgb(184, 98, 102)\",\n      color: \"rgb(255, 255, 255)\",\n      width: \"210px\"\n    }\n\n    const getAlert = () => (\n\n      <SweetAlert\n        title=\"Hello there!\"\n        onConfirm={this.handleSignUp}\n        confirmBtnStyle={confirmBtnStyle}\n        onCancel={this.hideAlert}\n        showCancel={true}\n        cancelBtnStyle={cancelBtnStyle}\n        type=\"controlled\"\n      >\n        <form>\n          <div className=\"form-group\">\n          It seems you have not yet signed up.  In order for us to save your budget, please register below.\n          <hr/>\n            <div className=\"row\">\n              <div className=\"col-sm-12\">\n                <div className=\"card login-label\">\n                  <label htmlFor=\"username\">Username</label>\n                  <input \n                    type=\"text\" \n                    name=\"username\"\n                    value={this.state.username}\n                    onChange={(e) => this.setState({ username: e.target.value })}\n                    className=\"form-control login-form\" \n                    placeholder=\"Enter Username Here\" \n                  />\n                </div>\n              </div>\n            </div>\n\n            <div className=\"row\">\n              <div className=\"col-sm-12\">\n                <div className=\"card login-label\">\n                  <label htmlFor=\"email\">Email</label>\n                  <input \n                    type=\"text\" \n                    name=\"email\"\n                    value={this.state.email}\n                    onChange={(e) => this.setState({ email: e.target.value })}\n                    className=\"form-control login-form\" \n                    placeholder=\"youremail@gmail.com\" \n                  />\n                </div>\n              </div>\n            </div>\n\n            <div className=\"row\">\n              <div className=\"col-sm-12\">\n                <div className=\"card login-label\">\n                  <label htmlFor=\"password\">Password</label>\n                  <input \n                    type=\"password\" \n                    name=\"password\"\n                    value={this.state.password}\n                    onChange={(e) => this.setState({ password: e.target.value })}\n                    className=\"form-control login-form\" \n                    placeholder=\"Enter Password Here\"\n                  />\n                </div>\n              </div>\n            </div>\n          </div>\n        </form>\n      </SweetAlert>\n\n      \n    );\n\n    this.setState({\n      alert: getAlert()\n    });\n  }\n  // ***********************************************\n\n  hideAlert() {\n    this.setState({ alert: false });\n  }\n\n\n  // Used when a new or unregistered user saves their budget.  POST their entries in db.\n  saveNewUserBudget() {\n    // TODO (CB 10/5) - turn this into async/await?\n    Promise.all([UserService.saveIncomeNew(this.state.incomeData), UserService.saveExpenseNew(this.state.expenseData)])\n      .then(res =>{\n        this.setState({ newUser: false, unsavedChanges: false });\n        console.log(res);\n        successfulSaveAlert();\n      })\n      .catch(error => {\n        console.error(error.message)\n      });\n  }\n\n  // Used when an existing user saves their budget.  PUT their entries updated in db.\n  saveExistingUserBudget() {\n    // TODO (CB 10/5) - turn this into async/await?\n    Promise.all([UserService.saveIncome(this.state.incomeData), UserService.saveExpense(this.state.expenseData)])\n      .then(res =>{\n        this.setState({ unsavedChanges: false });\n        console.log(res);\n        successfulSaveAlert();\n      })\n      .catch(error => {\n        console.error(error.message)\n      });\n  }\n\n // Triggered when user clicks save. Calls the correct method based on user's status. \n  handleSave(evt) {    \n    evt.preventDefault();\n\n    if (this.state.unregisteredUser) {\n      // console.log(\"handleSave has been called with an unregistered user\");\n      this.toggleSignUp();\n    } else if (this.state.newUser) {\n      // console.log(\"handleSave has been called with a new user\")\n      this.saveNewUserBudget();\n    } else {\n      // console.log(\"handleSave has been called with an existing user\")\n      this.saveExistingUserBudget();\n    }\n  }\n\n\n  // Based on user's status, makes API call for the user's budget information or seeds default values\n  componentDidMount() {\n    if (!this.state.currentUser) {\n      // console.log(\"Unregistered User!\")\n      this.setState({ \n        unregisteredUser: true,\n        incomeData: incomeData,\n        expenseData: expenseData,\n        isLoaded: true,\n      });\n\n    } else {\n      Promise.all([UserService.getUserIncome(), UserService.getUserExpense()])\n        .then(values =>{\n          const [income, expense] = [values[0], values[1]];\n\n          const jsonParsedIncomeObject = JSON.parse(income.data.jsonStringResponse);\n          const jsonParsedExpenseObject = JSON.parse(expense.data.jsonStringResponse);\n    \n          // console.log(\"componentDidMount API call INCOME response: \", jsonParsedIncomeObject);\n          // console.log(\"componentDidMount API call EXPENSE response: \", jsonParsedExpenseObject);\n    \n          if (jsonParsedIncomeObject.categories.length === 0 && jsonParsedExpenseObject.categories.length === 0) {\n            this.setState({\n              incomeData: incomeData,\n              expenseData: expenseData,\n              newUser: true,\n              isLoaded: true,\n            });\n          } else {\n            this.setState({\n              incomeData: jsonParsedIncomeObject,\n              expenseData: jsonParsedExpenseObject,\n              incomeTotal: income.data.total,\n              expenseTotal: expense.data.total,\n              newUser: false,\n              isLoaded: true,\n            });\n          }\n\n        })\n        .catch(error => {\n          console.error(error.message)\n        });\n    }\n  }\n\n\n\n  render() {\n\n    return (\n\n      <div className=\"budget\">\n\n      {/* If user has made changes without saving and tries to leave page, alerts the user */}\n      <UnsavedChangesAlert unsavedChanges={this.state.unsavedChanges} />\n\n        {/* Title and subtitle, with instructions for user */}\n        <Jumbotron\n          largeTitle=\"Calculator \"\n          smallTitle=\"Quick Budget\"\n          subtitle=\"A quick and easy reference tool to calculate your basic monthly budget.\"\n        >\n          <div className=\"budget-instructions-list\">\n            <ol className=\"budget-list-text\">\n              <li className=\"budget-list-text income\">\n                Add your income below\n              </li>\n              <li className=\"budget-list-text expenses\">\n                After that, we'll guide you through your expenses\n              </li>\n              <li className=\"budget-list-text save\">\n                Click save - we'll store your budget and take you to your dashboard with more insights\n              </li>\n            </ol>\n          </div>\n        </Jumbotron>\n\n        {/* Renders loading image until API calls finish.  Then, renders the Boxes with budget information */}\n        {this.state.isLoaded \n          ?\n            <div>\n              {/* Box with income information */}\n              <Box \n                title=\"Income\"\n                boxType=\"income\"\n                boxData={this.state.incomeData}\n                handleUpdate={this.updateIncomeHelper}\n                total={this.state.incomeTotal}\n                // handleSaveNew={this.saveNewIncomeHelper} - used to add new items.  Currently disabled.\n              />\n\n              {/* Box with expense information */}\n              <Box\n                title=\"Expenses\"\n                boxType=\"expenses\"\n                boxData={this.state.expenseData} \n                handleUpdate={this.updateExpensesHelper}\n                total={this.state.expenseTotal}\n                // handleSaveNew={this.saveNewExpensesHelper} - used to add new items.  Currently disabled.\n              />\n\n              {/* Summary displays the final total monthly amount */}\n              <Summary \n                totalIncome={this.state.incomeTotal}\n                totalExpenses={this.state.expenseTotal}\n              />\n\n              {/* Save button */}\n              <button onClick={this.handleSave} type=\"button\" className=\"btn btn-save\">Save</button>\n            </div>\n          :\n            // While API call is loading, puts a spinning loading image\n            <Loading />\n        }\n        \n      {/* This is the location for the SweetAlert modal that appears when an unregistered user clicks save, prompting them to register */}\n      {this.state.alert}\n\n      </div>\n    );\n  }\n}\n\nexport default Budget;\n","// *************************************************************************************************************\n// Home.js - Main landing page for site.  Explains what Quick Budget is, and gives links to get started.\n// *************************************************************************************************************\n\n// Dependencies\nimport React, { Component } from \"react\";\nimport { BrowserRouter as Switch, Route, Link } from \"react-router-dom\";\nimport \"@fortawesome/fontawesome-free/js/all.js\";\n\n// Project Components\nimport Jumbotron from \"./Jumbotron\";\n\n// Routes\nimport Budget from \"./Budget\";\nimport Login from \"./Login\";\nimport SignUp from \"./SignUp\";\n\nexport default class Home extends Component {\n\n  render() {\n    return (\n\n      <Jumbotron\n        largeTitle=\"Welcome to \"\n        smallTitle=\"Quick Budget\"\n        subtitle=\"Create a snapshot of your monthly finances.\"\n        >\n\n          <div className=\"welcome-list\">\n            <div className=\"welcome-list-text\">\n              <i className=\"fas fa-check-circle welcome-list-icon\"></i>   Quick Budget guides you through entering your monthly income and expenses\n            </div>\n            <div className=\"welcome-list-text\">\n              <i className=\"fas fa-chart-bar welcome-list-icon\"></i> We'll crunch the numbers and let you know your monthly surplus or shortfall\n            </div>\n            <div className=\"welcome-list-text\">\n              <i className=\"far fa-clock welcome-list-icon\"></i> Your budget is stored here, so you can return and adjust whenever needed\n            </div>\n          </div>\n\n          <div className=\"row home-buttons\">\n            <div className=\"col-sm-12\">\n              <Link to={\"/budget\"}>\n                <button type=\"button\" className=\"btn btn-start-now\">Start Now</button>\n              </Link>\n              <br />\n              <Link to={\"/login\"}>\n                <button type=\"button\" className=\"btn btn-login\">Sign In</button>\n              </Link>\n              <br />\n              <Link to={\"/signup\"}>\n                <button type=\"button\" className=\"btn btn-signup\">Sign Up</button>\n              </Link>\n            </div>\n            <Switch>\n              <Route exact path=\"/budget\" component={Budget} />\n              <Route exact path=\"/login\" component={Login} />\n              <Route exact path=\"/signup\" component={SignUp} />\n            </Switch>\n          </div>\n\n        </Jumbotron>\n\n    );\n  }\n}\n","// ************************************************************\n// Dashboard.js - Displays information on the user's account\n// ************************************************************\n\n// Dependencies\nimport React, { Component } from \"react\";\n\n// Project Components\nimport Jumbotron from \"./Jumbotron\";\nimport Loading from \"./Loading\";\nimport AuthService from \"../services/auth.service\";\nimport UserService from \"../services/user.service\";\n\nclass Dashboard extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      currentUser: AuthService.getCurrentUser(),\n\n      incomeData: null,\n      expenseData: null,\n      incomeTotal: 0,\n      expenseTotal: 0,\n\n      isLoaded: false\n    };\n  }\n\n\n  componentDidMount() {\n    if (!this.state.currentUser) {\n      // TODO: Figure out how to handle user who has not logged in yet\n      this.setState({ content: 'No user' })\n    } else {\n      // TODO (CB 10/5) - turn this into async/await?\n      Promise.all([UserService.getUserIncome(), UserService.getUserExpense()])\n        .then(values =>{\n          const [income, expense] = [values[0], values[1]];\n\n          const jsonParsedIncomeObject = JSON.parse(income.data.jsonStringResponse);\n          const jsonParsedExpenseObject = JSON.parse(expense.data.jsonStringResponse);\n    \n          // console.log(\"componentDidMount API call INCOME response: \", jsonParsedIncomeObject);\n          // console.log(\"componentDidMount API call EXPENSE response: \", jsonParsedExpenseObject);\n    \n          this.setState({\n            incomeData: jsonParsedIncomeObject,\n            expenseData: jsonParsedExpenseObject,\n            incomeTotal: income.data.total,\n            expenseTotal: expense.data.total,\n            isLoaded: true,\n          });\n        })\n        .catch(error => {\n          console.error(error.message)\n        });\n    }\n  }\n\n  render() {\n    const { currentUser } = this.state;\n\n    return (\n\n      <Jumbotron\n        largeTitle=\"Welcome \"\n        smallTitle={currentUser.username}\n        subtitle=\"Here's a quick summary of what we have on file for you:\"\n      >\n\n        {this.state.isLoaded \n          ?\n          // TODO (CB 10/5) - make the Dashboard more interesting!  Add more here\n            <div>\n              <div>\n                Total Income: {this.state.incomeTotal}\n              </div>\n\n              <div>\n                Total Expense: {this.state.expenseTotal}\n              </div>\n\n              <div>\n                Go to your Budget\n              </div>\n            </div>\n          :\n            <Loading />\n        }\n\n      </Jumbotron>\n        \n    );\n  }\n}\n\nexport default Dashboard;\n","// ********************************************************************************************\n// Navbar.js - Component appearing on all pages.  Provides links to different pages in site.\n// ********************************************************************************************\n\n// Dependencies\nimport React, { Component } from 'react';\nimport { BrowserRouter as Router, Link } from \"react-router-dom\"; // Although Router is not used in this component, it has to be here because removing it affects the styling of Navbar.\n\n\n// Navbar is placed above the rest of the App.  It uses react-router-dom to direct the user.\n// Depending on whether someon is signed in, it will display different options.\nclass Navbar extends Component {\n  \n  render() {\n    return(\n      <nav className=\"navbar navbar-expand navbar-dark bg-dark\">\n        {/* LEFT SIDE of Navbar */}\n        <Link to={\"/\"} className=\"navbar-brand\">\n          Quick Budget\n        </Link>\n        <div className=\"navbar-nav mr-auto\">\n          <li className=\"nav-item\">\n            <Link to={\"/home\"} className=\"nav-link\">\n              Home\n            </Link>\n          </li>\n\n          {/* Is a user signed in? */}\n          {this.props.currentUser \n          ? \n            // If yes, then display 1) their username as a link to their Dashboard, and 2) a link to Budget.\n            <div className=\"navbar-nav ml-auto\">\n              <li className=\"nav-item\">\n                <Link to={\"/dashboard\"} className=\"nav-link\">\n                  {this.props.currentUser.username}\n                </Link>\n              </li>\n              <li className=\"nav-item\">\n                <Link to={\"/budget\"} className=\"nav-link\">\n                  Budget\n                </Link>\n              </li>\n            </div>\n          :\n            // If no user, then display a \"Start Now\" link that takes them to Budget page.\n            <div className=\"navbar-nav ml-auto\">\n              <li className=\"nav-item\">\n                <Link to={\"/budget\"} className=\"nav-link\">\n                  Start Now\n                </Link>\n              </li>\n            </div>\n          }\n        </div>\n        {/* End left side of Navbar */}\n\n        \n        {/* RIGHT SIDE of Navbar */}\n        {/* Is a user signed in? */}\n        {this.props.currentUser \n        ? \n          // If yes, then display Log Out\n          <div className=\"navbar-nav ml-auto\">\n            <li className=\"nav-item\">\n              <a href=\"/login\" className=\"nav-link\" onClick={this.props.logOut}>\n                Log Out\n              </a>\n            </li>\n          </div>\n        : \n          // If no, then display 1) Log In, and 2) Sign Up\n          <div className=\"navbar-nav ml-auto\">\n            <li className=\"nav-item\">\n              <Link to={\"/login\"} className=\"nav-link\">\n                Log In\n              </Link>\n            </li>\n\n            <li className=\"nav-item\">\n              <Link to={\"/signup\"} className=\"nav-link\">\n                Sign Up\n              </Link>\n            </li>\n          </div>\n        }\n        {/* End right side of Navbar */}\n      </nav>\n    )\n  }\n}\n\nexport default Navbar;\n","// **************************************************************************************************\n// Footer.js - Appears at the bottom of all pages.  Gives links to my GitHub, LinkedIn, etc.\n// **************************************************************************************************\n\nimport React, { Component } from 'react';\n\nclass Footer extends Component {\n  render() {\n    return(\n\n      <footer className=\"footer-nav navbar navbar-expand navbar-dark bg-dark justify-content-center\">\n\n        <div className=\"navbar-nav spacing-navbar-nav\">\n          <div className=\"nav-item\">\n            © 2020 Cody Brock\n          </div>\n        </div>\n\n        <div className=\"navbar-nav spacing-navbar-nav\">\n          <div className=\"nav-item nav-link footer-nav-link\">\n            <a href=\"https://github.com/cody-brock\">Github</a>\n          </div>\n        </div>\n\n        <div className=\"navbar-nav spacing-navbar-nav\">\n          <div className=\"nav-item nav-link footer-nav-link\">\n            <a href=\"https://codybrock.dev/\">Portfolio</a>\n          </div>\n        </div>\n\n        <div className=\"navbar-nav spacing-navbar-nav\">\n          <div className=\"nav-item nav-link footer-nav-link\">\n            <a href=\"https://www.linkedin.com/in/cody-brock-dev/\">LinkedIn</a>\n          </div>\n        </div>\n      \n      </footer>\n\n    )\n  }\n}\n\nexport default Footer;\n","// *************************************************************************************************************\n// App.js - Main component, holding all others.\n// *************************************************************************************************************\n\n// Dependencies\nimport React, { Component } from \"react\";\nimport { BrowserRouter as Router, Switch, Route } from \"react-router-dom\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport \"./App.css\";\n\n// Project Components\nimport Login from \"./components/Login\";\nimport SignUp from \"./components/SignUp\";\nimport Home from \"./components/Home\";\nimport Dashboard from \"./components/Dashboard\";\nimport Budget from\"./components/Budget\"\n\nimport Navbar from './components/Navbar';\nimport Footer from './components/Footer';\n\nimport AuthService from \"./services/auth.service\";\n\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      currentUser: undefined\n    };\n    this.logOut = this.logOut.bind(this);\n  }\n\n  logOut() {\n    AuthService.logout();\n  }\n\n  componentDidMount() {\n    const user = AuthService.getCurrentUser();\n    if (user) this.setState({ currentUser: user });\n  }\n\n\n  render() {\n    const { currentUser } = this.state;\n\n    return (\n      <Router>\n          \n        <Navbar currentUser={currentUser} logOut={this.logOut} />\n\n        <div className=\"App\">\n          <div className=\"container\">\n\n            <div className=\"mt-3\">\n              <Switch>\n                <Route exact path={[\"/\", \"/home\"]} component={Home} />\n                <Route exact path=\"/login\" component={Login} />\n                <Route exact path=\"/signup\" component={SignUp} />\n                <Route exact path=\"/dashboard\" component={Dashboard} />\n                <Route exact path=\"/budget\" component={Budget} />\n              </Switch>\n            </div>\n\n          </div>\n        </div>\n\n        <Footer />\n\n      </Router>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { BrowserRouter } from 'react-router-dom'\nimport 'bootstrap';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport './index.css';\n\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <BrowserRouter>\n      <App />\n    </BrowserRouter>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}